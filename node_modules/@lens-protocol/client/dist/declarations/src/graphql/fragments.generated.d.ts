import * as Types from './types.generated';
import { GraphQLClient } from 'graphql-request';
export type FeeFollowModuleSettingsFragment = {
    __typename: 'FeeFollowModuleSettings';
    contractAddress: string;
    recipient: string;
    amount: ModuleFeeAmountFragment;
};
export type ProfileFollowModuleSettingsFragment = {
    __typename: 'ProfileFollowModuleSettings';
    contractAddress: string;
};
export type RevertFollowModuleSettingsFragment = {
    __typename: 'RevertFollowModuleSettings';
    contractAddress: string;
};
export type UnknownFollowModuleSettingsFragment = {
    __typename: 'UnknownFollowModuleSettings';
    contractAddress: string;
};
export type AttributeFragment = {
    __typename: 'Attribute';
    displayType: string | null;
    key: string;
    value: string;
};
export type ProfileFieldsFragment = {
    __typename: 'Profile';
    id: string;
    name: string | null;
    bio: string | null;
    handle: string;
    ownedBy: string;
    interests: Array<string> | null;
    isDefault: boolean;
    isFollowedByMe: boolean;
    isFollowing: boolean;
    picture: ProfilePictureSetFragment | {
        __typename: 'NftImage';
        contractAddress: string;
        tokenId: string;
        uri: string;
        verified: boolean;
    } | null;
    coverPicture: ProfileCoverSetFragment | {
        __typename: 'NftImage';
        contractAddress: string;
        tokenId: string;
        uri: string;
        verified: boolean;
    } | null;
    stats: {
        __typename: 'ProfileStats';
        totalFollowers: number;
        totalFollowing: number;
        totalPosts: number;
    };
    followModule: FeeFollowModuleSettingsFragment | ProfileFollowModuleSettingsFragment | RevertFollowModuleSettingsFragment | UnknownFollowModuleSettingsFragment | null;
    attributes: Array<AttributeFragment> | null;
    dispatcher: {
        address: string;
        canUseRelay: boolean;
    } | null;
};
export type ProfileFragment = {
    invitedBy: ProfileFieldsFragment | null;
} & ProfileFieldsFragment;
export type Eip712TypedDataDomainFragment = {
    name: string;
    chainId: number;
    version: string;
    verifyingContract: string;
};
export type Erc20Fragment = {
    __typename: 'Erc20';
    name: string;
    symbol: string;
    decimals: number;
    address: string;
};
export type Erc20AmountFragment = {
    __typename: 'Erc20Amount';
    value: string;
    asset: Erc20Fragment;
};
export type ModuleFeeAmountFragment = {
    __typename: 'ModuleFeeAmount';
    value: string;
    asset: Erc20Fragment;
};
export type FreeCollectModuleSettingsFragment = {
    __typename: 'FreeCollectModuleSettings';
    contractAddress: string;
    followerOnly: boolean;
};
export type FeeCollectModuleSettingsFragment = {
    __typename: 'FeeCollectModuleSettings';
    contractAddress: string;
    followerOnly: boolean;
    recipient: string;
    referralFee: number;
    amount: ModuleFeeAmountFragment;
};
export type LimitedFeeCollectModuleSettingsFragment = {
    __typename: 'LimitedFeeCollectModuleSettings';
    collectLimit: string;
    contractAddress: string;
    followerOnly: boolean;
    recipient: string;
    referralFee: number;
    amount: ModuleFeeAmountFragment;
};
export type LimitedTimedFeeCollectModuleSettingsFragment = {
    __typename: 'LimitedTimedFeeCollectModuleSettings';
    collectLimit: string;
    contractAddress: string;
    followerOnly: boolean;
    endTimestamp: string;
    recipient: string;
    referralFee: number;
    amount: ModuleFeeAmountFragment;
};
export type RevertCollectModuleSettingsFragment = {
    __typename: 'RevertCollectModuleSettings';
    contractAddress: string;
};
export type TimedFeeCollectModuleSettingsFragment = {
    __typename: 'TimedFeeCollectModuleSettings';
    contractAddress: string;
    followerOnly: boolean;
    endTimestamp: string;
    recipient: string;
    referralFee: number;
    amount: ModuleFeeAmountFragment;
};
export type MultirecipientFeeCollectModuleSettingsFragment = {
    __typename: 'MultirecipientFeeCollectModuleSettings';
    contractAddress: string;
    followerOnly: boolean;
    referralFee: number;
    collectLimitOptional: string | null;
    endTimestampOptional: string | null;
    amount: ModuleFeeAmountFragment;
    recipients: Array<{
        recipient: string;
        split: number;
    }>;
};
export type Erc4626FeeCollectModuleSettingsFragment = {
    __typename: 'ERC4626FeeCollectModuleSettings';
    contractAddress: string;
    followerOnly: boolean;
    recipient: string;
    referralFee: number;
    vault: string;
    collectLimitOptional: string | null;
    endTimestampOptional: string | null;
    amount: ModuleFeeAmountFragment;
};
export type AaveFeeCollectModuleSettingsFragment = {
    __typename: 'AaveFeeCollectModuleSettings';
    contractAddress: string;
    followerOnly: boolean;
    recipient: string;
    referralFee: number;
    collectLimitOptional: string | null;
    endTimestampOptional: string | null;
    amount: ModuleFeeAmountFragment;
};
export type SimpleCollectModuleSettingsFragment = {
    __typename: 'SimpleCollectModuleSettings';
    contractAddress: string;
    followerOnly: boolean;
    collectLimitOptional: string | null;
    endTimestampOptional: string | null;
    feeOptional: {
        referralFee: number;
        recipient: string;
        amount: ModuleFeeAmountFragment;
    } | null;
};
export type WalletFragment = {
    __typename: 'Wallet';
    address: string;
    defaultProfile: ProfileFragment | null;
};
export type MediaFragment = {
    __typename: 'Media';
    altTag: string | null;
    cover: string | null;
    mimeType: string | null;
    url: string;
};
export type PublicationMediaSetFragment = {
    __typename: 'MediaSet';
    onChain: MediaFragment;
    original: MediaFragment;
    optimized: MediaFragment | null;
    transformed: MediaFragment | null;
};
export type ProfilePictureSetFragment = {
    __typename: 'MediaSet';
    onChain: MediaFragment;
    original: MediaFragment;
    optimized: MediaFragment | null;
    transformed: MediaFragment | null;
};
export type ProfileCoverSetFragment = {
    __typename: 'MediaSet';
    onChain: MediaFragment;
    original: MediaFragment;
    optimized: MediaFragment | null;
    transformed: MediaFragment | null;
};
export type MetadataFragment = {
    __typename: 'MetadataOutput';
    animatedUrl: string | null;
    content: string | null;
    contentWarning: Types.PublicationContentWarning | null;
    description: string | null;
    image: string | null;
    locale: string | null;
    mainContentFocus: Types.PublicationMainFocus;
    name: string | null;
    tags: Array<string>;
    media: Array<PublicationMediaSetFragment>;
    attributes: Array<MetadataAttributeOutputFragment>;
};
export type MetadataAttributeOutputFragment = {
    __typename: 'MetadataAttributeOutput';
    traitType: string | null;
    value: string | null;
};
export type SimplePublicationStatsFragment = {
    __typename: 'PublicationStats';
    totalAmountOfMirrors: number;
    totalAmountOfCollects: number;
    totalAmountOfComments: number;
    totalUpvotes: number;
    totalDownvotes: number;
    totalBookmarks: number;
};
export type MirrorBaseFragment = {
    __typename: 'Mirror';
    id: string;
    createdAt: string;
    isDataAvailability: boolean;
    dataAvailabilityProofs: string | null;
    hidden: boolean;
    profile: ProfileFragment;
};
export type MirrorFragment = {
    __typename: 'Mirror';
    mirrorOf: CommentFragment | PostFragment;
} & MirrorBaseFragment;
export type CommentBaseFragment = {
    __typename: 'Comment';
    id: string;
    appId: string | null;
    collectNftAddress: string | null;
    createdAt: string;
    hidden: boolean;
    bookmarked: boolean;
    isGated: boolean;
    isDataAvailability: boolean;
    dataAvailabilityProofs: string | null;
    reaction: Types.ReactionTypes | null;
    hasCollectedByMe: boolean;
    mirrors: Array<string>;
    stats: SimplePublicationStatsFragment;
    metadata: MetadataFragment;
    profile: ProfileFragment;
    collectedBy: WalletFragment | null;
    collectModule: ({
        __typename: 'AaveFeeCollectModuleSettings';
    } & AaveFeeCollectModuleSettingsFragment) | ({
        __typename: 'ERC4626FeeCollectModuleSettings';
    } & Erc4626FeeCollectModuleSettingsFragment) | ({
        __typename: 'FeeCollectModuleSettings';
    } & FeeCollectModuleSettingsFragment) | ({
        __typename: 'FreeCollectModuleSettings';
    } & FreeCollectModuleSettingsFragment) | ({
        __typename: 'LimitedFeeCollectModuleSettings';
    } & LimitedFeeCollectModuleSettingsFragment) | ({
        __typename: 'LimitedTimedFeeCollectModuleSettings';
    } & LimitedTimedFeeCollectModuleSettingsFragment) | ({
        __typename: 'MultirecipientFeeCollectModuleSettings';
    } & MultirecipientFeeCollectModuleSettingsFragment) | ({
        __typename: 'RevertCollectModuleSettings';
    } & RevertCollectModuleSettingsFragment) | ({
        __typename: 'SimpleCollectModuleSettings';
    } & SimpleCollectModuleSettingsFragment) | ({
        __typename: 'TimedFeeCollectModuleSettings';
    } & TimedFeeCollectModuleSettingsFragment) | {
        __typename: 'UnknownCollectModuleSettings';
    };
    referenceModule: {
        __typename: 'DegreesOfSeparationReferenceModuleSettings';
    } | {
        __typename: 'FollowOnlyReferenceModuleSettings';
        contractAddress: string;
    } | {
        __typename: 'UnknownReferenceModuleSettings';
    } | null;
    canComment: {
        result: boolean;
    };
    canMirror: {
        result: boolean;
    };
};
export type CommentFragment = {
    __typename: 'Comment';
    commentOn: CommentBaseFragment | MirrorBaseFragment | PostFragment | null;
    mainPost: MirrorBaseFragment | PostFragment;
} & CommentBaseFragment;
export type PostFragment = {
    __typename: 'Post';
    id: string;
    appId: string | null;
    collectNftAddress: string | null;
    createdAt: string;
    hidden: boolean;
    bookmarked: boolean;
    isGated: boolean;
    isDataAvailability: boolean;
    dataAvailabilityProofs: string | null;
    reaction: Types.ReactionTypes | null;
    hasCollectedByMe: boolean;
    mirrors: Array<string>;
    stats: SimplePublicationStatsFragment;
    metadata: MetadataFragment;
    profile: ProfileFragment;
    collectedBy: WalletFragment | null;
    collectModule: ({
        __typename: 'AaveFeeCollectModuleSettings';
    } & AaveFeeCollectModuleSettingsFragment) | ({
        __typename: 'ERC4626FeeCollectModuleSettings';
    } & Erc4626FeeCollectModuleSettingsFragment) | ({
        __typename: 'FeeCollectModuleSettings';
    } & FeeCollectModuleSettingsFragment) | ({
        __typename: 'FreeCollectModuleSettings';
    } & FreeCollectModuleSettingsFragment) | ({
        __typename: 'LimitedFeeCollectModuleSettings';
    } & LimitedFeeCollectModuleSettingsFragment) | ({
        __typename: 'LimitedTimedFeeCollectModuleSettings';
    } & LimitedTimedFeeCollectModuleSettingsFragment) | ({
        __typename: 'MultirecipientFeeCollectModuleSettings';
    } & MultirecipientFeeCollectModuleSettingsFragment) | ({
        __typename: 'RevertCollectModuleSettings';
    } & RevertCollectModuleSettingsFragment) | ({
        __typename: 'SimpleCollectModuleSettings';
    } & SimpleCollectModuleSettingsFragment) | ({
        __typename: 'TimedFeeCollectModuleSettings';
    } & TimedFeeCollectModuleSettingsFragment) | {
        __typename: 'UnknownCollectModuleSettings';
    };
    referenceModule: {
        __typename: 'DegreesOfSeparationReferenceModuleSettings';
    } | {
        __typename: 'FollowOnlyReferenceModuleSettings';
        contractAddress: string;
    } | {
        __typename: 'UnknownReferenceModuleSettings';
    } | null;
    canComment: {
        result: boolean;
    };
    canMirror: {
        result: boolean;
    };
};
export type CommonPaginatedResultInfoFragment = {
    __typename: 'PaginatedResultInfo';
    prev: string | null;
    next: string | null;
    totalCount: number | null;
};
export type FollowingFragment = {
    __typename: 'Following';
    profile: ProfileFragment;
};
export type FollowerFragment = {
    __typename: 'Follower';
    wallet: WalletFragment;
};
export type RelayerResultFragment = {
    __typename: 'RelayerResult';
    txHash: string;
    txId: string;
};
export type RelayErrorFragment = {
    __typename: 'RelayError';
    reason: Types.RelayErrorReasons;
};
export type CreateDataAvailabilityPublicationResultFragment = {
    __typename: 'CreateDataAvailabilityPublicationResult';
    id: string;
    proofs: string;
    dataAvailabilityId: string;
};
export declare const Eip712TypedDataDomainFragmentDoc: import("graphql").DocumentNode;
export declare const Erc20FragmentDoc: import("graphql").DocumentNode;
export declare const Erc20AmountFragmentDoc: import("graphql").DocumentNode;
export declare const MediaFragmentDoc: import("graphql").DocumentNode;
export declare const ProfilePictureSetFragmentDoc: import("graphql").DocumentNode;
export declare const ProfileCoverSetFragmentDoc: import("graphql").DocumentNode;
export declare const ModuleFeeAmountFragmentDoc: import("graphql").DocumentNode;
export declare const FeeFollowModuleSettingsFragmentDoc: import("graphql").DocumentNode;
export declare const ProfileFollowModuleSettingsFragmentDoc: import("graphql").DocumentNode;
export declare const RevertFollowModuleSettingsFragmentDoc: import("graphql").DocumentNode;
export declare const UnknownFollowModuleSettingsFragmentDoc: import("graphql").DocumentNode;
export declare const AttributeFragmentDoc: import("graphql").DocumentNode;
export declare const ProfileFieldsFragmentDoc: import("graphql").DocumentNode;
export declare const ProfileFragmentDoc: import("graphql").DocumentNode;
export declare const MirrorBaseFragmentDoc: import("graphql").DocumentNode;
export declare const SimplePublicationStatsFragmentDoc: import("graphql").DocumentNode;
export declare const PublicationMediaSetFragmentDoc: import("graphql").DocumentNode;
export declare const MetadataAttributeOutputFragmentDoc: import("graphql").DocumentNode;
export declare const MetadataFragmentDoc: import("graphql").DocumentNode;
export declare const WalletFragmentDoc: import("graphql").DocumentNode;
export declare const FreeCollectModuleSettingsFragmentDoc: import("graphql").DocumentNode;
export declare const FeeCollectModuleSettingsFragmentDoc: import("graphql").DocumentNode;
export declare const LimitedFeeCollectModuleSettingsFragmentDoc: import("graphql").DocumentNode;
export declare const LimitedTimedFeeCollectModuleSettingsFragmentDoc: import("graphql").DocumentNode;
export declare const RevertCollectModuleSettingsFragmentDoc: import("graphql").DocumentNode;
export declare const TimedFeeCollectModuleSettingsFragmentDoc: import("graphql").DocumentNode;
export declare const MultirecipientFeeCollectModuleSettingsFragmentDoc: import("graphql").DocumentNode;
export declare const Erc4626FeeCollectModuleSettingsFragmentDoc: import("graphql").DocumentNode;
export declare const AaveFeeCollectModuleSettingsFragmentDoc: import("graphql").DocumentNode;
export declare const SimpleCollectModuleSettingsFragmentDoc: import("graphql").DocumentNode;
export declare const PostFragmentDoc: import("graphql").DocumentNode;
export declare const CommentBaseFragmentDoc: import("graphql").DocumentNode;
export declare const CommentFragmentDoc: import("graphql").DocumentNode;
export declare const MirrorFragmentDoc: import("graphql").DocumentNode;
export declare const CommonPaginatedResultInfoFragmentDoc: import("graphql").DocumentNode;
export declare const FollowingFragmentDoc: import("graphql").DocumentNode;
export declare const FollowerFragmentDoc: import("graphql").DocumentNode;
export declare const RelayerResultFragmentDoc: import("graphql").DocumentNode;
export declare const RelayErrorFragmentDoc: import("graphql").DocumentNode;
export declare const CreateDataAvailabilityPublicationResultFragmentDoc: import("graphql").DocumentNode;
export type SdkFunctionWrapper = <T>(action: (requestHeaders?: Record<string, string>) => Promise<T>, operationName: string, operationType?: string) => Promise<T>;
export declare function getSdk(client: GraphQLClient, withWrapper?: SdkFunctionWrapper): {};
export type Sdk = ReturnType<typeof getSdk>;
