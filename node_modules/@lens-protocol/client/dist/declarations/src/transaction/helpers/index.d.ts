import type { CreateDataAvailabilityPublicationResultFragment, RelayerResultFragment, RelayErrorFragment } from '../../graphql/fragments.generated';
import type { TransactionErrorFragment, TransactionIndexedResultFragment } from '../graphql/transaction.generated';
/**
 * Check if the result is a {@link CreateDataAvailabilityPublicationResultFragment}.
 *
 * @param result - result to check
 * @returns true if the result is a {@link CreateDataAvailabilityPublicationResultFragment}
 */
export declare function isCreateDataAvailabilityPublicationResult(result: CreateDataAvailabilityPublicationResultFragment | RelayErrorFragment): result is CreateDataAvailabilityPublicationResultFragment;
/**
 * Check if the result is a {@link RelayerResultFragment}.
 *
 * @param result - result to check
 * @returns true if the result is a {@link RelayerResultFragment}
 */
export declare function isRelayerResult(result: RelayerResultFragment | RelayErrorFragment): result is RelayerResultFragment;
/**
 * Check if the result is a {@link RelayErrorFragment}.
 *
 * @param result - result to check
 * @returns true if the result is a {@link RelayErrorFragment}
 */
export declare function isRelayerError(result: RelayerResultFragment | RelayErrorFragment): result is RelayErrorFragment;
/**
 * Check if the result is a {@link TransactionIndexedResultFragment}.
 *
 * @param result - result to check
 * @returns true if the result is a {@link TransactionIndexedResultFragment}
 */
export declare function isTransactionIndexedResult(result: TransactionIndexedResultFragment | TransactionErrorFragment): result is TransactionIndexedResultFragment;
/**
 * Check if the result is a {@link TransactionErrorFragment}.
 *
 * @param result - result to check
 * @returns true if the result is a {@link TransactionErrorFragment}
 */
export declare function isTransactionError(result: TransactionIndexedResultFragment | TransactionErrorFragment): result is TransactionErrorFragment;
